# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models.changeKey(fromName='Model-1', toName='ROOM_TEMP_2D')
mdb.models['ROOM_TEMP_2D'].ConstrainedSketch(name='__profile__', sheetSize=
    200.0)
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].Line(point1=(-35.0, -15.0), 
    point2=(-35.0, 15.0))
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].VerticalConstraint(
    addUndoState=False, entity=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[2])
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].Line(point1=(-35.0, 15.0), 
    point2=(10.0, 15.0))
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[3])
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[2], entity2=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[3])
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].Line(point1=(10.0, 15.0), 
    point2=(10.0, -15.0))
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].VerticalConstraint(
    addUndoState=False, entity=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[4])
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[3], entity2=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[4])
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].Line(point1=(10.0, -15.0), 
    point2=(5.0, -15.0))
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[5])
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[4], entity2=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[5])
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].Line(point1=(5.0, -15.0), 
    point2=(5.0, 10.0))
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].VerticalConstraint(
    addUndoState=False, entity=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[6])
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[5], entity2=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[6])
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].Line(point1=(5.0, 10.0), 
    point2=(-30.0, 10.0))
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[7])
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[6], entity2=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[7])
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].delete(objectList=(
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[7], ))
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].Spot(point=(5.0, 10.0))
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].vertices[7], entity2=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[6])
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].Spot(point=(-30.0, 10.0))
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].Spot(point=(-30.0, -10.0))
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].Line(point1=(5.0, 10.0), 
    point2=(-30.0, 10.0))
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[8])
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[6], entity2=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[8])
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].Line(point1=(-30.0, 10.0), 
    point2=(-30.0, -10.0))
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].VerticalConstraint(
    addUndoState=False, entity=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[9])
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[8], entity2=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[9])
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].Line(point1=(-30.0, -10.0), 
    point2=(5.0, -10.0))
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[10])
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[9], entity2=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[10])
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].vertices[14], entity2=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[6])
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].delete(objectList=(
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].constraints[20], ))
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].delete(objectList=(
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[6], ))
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].Line(point1=(-35.0, -15.0), 
    point2=(5.0, -15.0))
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[11])
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[2], entity2=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[11])
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].Line(point1=(5.0, 10.0), 
    point2=(5.0, -10.0))
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].VerticalConstraint(
    addUndoState=False, entity=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[12])
mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[8], entity2=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'].geometry[12])
mdb.models['ROOM_TEMP_2D'].Part(dimensionality=TWO_D_PLANAR, name='WALLS', 
    type=DEFORMABLE_BODY)
mdb.models['ROOM_TEMP_2D'].parts['WALLS'].BaseShell(sketch=
    mdb.models['ROOM_TEMP_2D'].sketches['__profile__'])
del mdb.models['ROOM_TEMP_2D'].sketches['__profile__']
# Save by Rodrigo on 2020_01_08-12.50.49; build 2020 2019_09_13-13.49.31 163176
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['ROOM_TEMP_2D'].HeatTransferStep(deltmx=0.1, initialInc=3.0, maxInc=
    3.0, minInc=3e-05, name='THERMAL', previous='Initial', timePeriod=3.0)
mdb.models['ROOM_TEMP_2D'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['ROOM_TEMP_2D'].rootAssembly.Instance(dependent=ON, name='WALLS-1', 
    part=mdb.models['ROOM_TEMP_2D'].parts['WALLS'])
mdb.models['ROOM_TEMP_2D'].rootAssembly.Set(edges=
    mdb.models['ROOM_TEMP_2D'].rootAssembly.instances['WALLS-1'].edges.getSequenceFromMask(
    ('[#30 ]', ), ), name='Set-1')
mdb.models['ROOM_TEMP_2D'].EncastreBC(createStepName='Initial', localCsys=None, 
    name='BC-1', region=mdb.models['ROOM_TEMP_2D'].rootAssembly.sets['Set-1'])
mdb.models['ROOM_TEMP_2D'].rootAssembly.Surface(name='Surf-1', side1Edges=
    mdb.models['ROOM_TEMP_2D'].rootAssembly.instances['WALLS-1'].edges.getSequenceFromMask(
    ('[#80 ]', ), ))
mdb.models['ROOM_TEMP_2D'].SurfaceHeatFlux(createStepName='THERMAL', magnitude=
    100.0, name='Load-1', region=
    mdb.models['ROOM_TEMP_2D'].rootAssembly.surfaces['Surf-1'])
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='ROOM_TEMP_2D', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=4, numDomains=4, numGPUs=1, queue=None, resultsFormat=ODB, scratch=
    '', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
# Save by Rodrigo on 2020_01_08-12.53.58; build 2020 2019_09_13-13.49.31 163176
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['ROOM_TEMP_2D'].Material(name='CONCRETE')
mdb.models['ROOM_TEMP_2D'].materials['CONCRETE'].Elastic(table=((
    100000000000.0, 0.22), ))
mdb.models['ROOM_TEMP_2D'].materials['CONCRETE'].Conductivity(table=((20.0, ), 
    ))
mdb.models['ROOM_TEMP_2D'].HomogeneousSolidSection(material='CONCRETE', name=
    'CONCRETE', thickness=1.0)
mdb.models['ROOM_TEMP_2D'].parts['WALLS'].Set(faces=
    mdb.models['ROOM_TEMP_2D'].parts['WALLS'].faces.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-1')
mdb.models['ROOM_TEMP_2D'].parts['WALLS'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['ROOM_TEMP_2D'].parts['WALLS'].sets['Set-1'], sectionName=
    'CONCRETE', thicknessAssignment=FROM_SECTION)
mdb.models['ROOM_TEMP_2D'].parts['WALLS'].setElementType(elemTypes=(ElemType(
    elemCode=CPE4R, elemLibrary=STANDARD, secondOrderAccuracy=OFF, 
    hourglassControl=DEFAULT, distortionControl=DEFAULT), ElemType(
    elemCode=CPE3, elemLibrary=STANDARD)), regions=(
    mdb.models['ROOM_TEMP_2D'].parts['WALLS'].faces.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['ROOM_TEMP_2D'].parts['WALLS'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=4.5)
mdb.models['ROOM_TEMP_2D'].parts['WALLS'].generateMesh()
mdb.models['ROOM_TEMP_2D'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 0, 'jobName': 'Job-1'})
# Save by Rodrigo on 2020_01_08-12.55.30; build 2020 2019_09_13-13.49.31 163176
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'STRESS-DISPLACEMENT ELEMENTS OR OTHER ELEMENTS WITHOUT TEMPERATURE DEGREE OF FREEDOM ARE NOT ALLOWED IN A HEAT TRANSFER ANALYSIS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.models['ROOM_TEMP_2D'].parts['WALLS'].setElementType(elemTypes=(ElemType(
    elemCode=DC2D4E, elemLibrary=STANDARD), ElemType(elemCode=DC2D3E, 
    elemLibrary=STANDARD)), regions=(
    mdb.models['ROOM_TEMP_2D'].parts['WALLS'].faces.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['ROOM_TEMP_2D'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'COUPLED THERMAL-ELECTRICAL AND COUPLED THERMAL-ELECTRICAL-STRUCTURAL ANALYSES REQUIRE AN ELECTRICAL CONDUCTIVITY PROPERTY DEFINITION', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'SPECIFIC HEAT MUST BE DEFINED IN A TRANSIENT HEAT TRANSFER ANALYSIS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SPECIFIC HEAT HAS NOT BEEN DEFINED FOR MATERIAL CONCRETE DURING A TRANSIENT HEAT TRANSFER ANALYSIS; PLEASE CHECK MATERIAL DATA', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\abaqus_results\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.models['ROOM_TEMP_2D'].parts['WALLS'].setElementType(elemTypes=(ElemType(
    elemCode=DC2D4, elemLibrary=STANDARD), ElemType(elemCode=DC2D3, 
    elemLibrary=STANDARD)), regions=(
    mdb.models['ROOM_TEMP_2D'].parts['WALLS'].faces.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['ROOM_TEMP_2D'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'SPECIFIC HEAT MUST BE DEFINED IN A TRANSIENT HEAT TRANSFER ANALYSIS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SPECIFIC HEAT HAS NOT BEEN DEFINED FOR MATERIAL CONCRETE DURING A TRANSIENT HEAT TRANSFER ANALYSIS; PLEASE CHECK MATERIAL DATA', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\abaqus_results\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.models['ROOM_TEMP_2D'].materials['CONCRETE'].SpecificHeat(table=((13.0, ), 
    ))
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE ABSOLUTE ZERO TEMPERATURE HAS NOT BEEN SPECIFIED FOR COMPUTING INTERNAL THERMAL ENERGY USING THE ABSOLUTE ZERO PARAMETER ON THE *PHYSICAL CONSTANTS OPTION. A DEFAULT VALUE OF 0.0000 WILL BE ASSUMED.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '*SPECIFIC HEAT REQUIRES THE USE OF *DENSITY', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\abaqus_results\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.models['ROOM_TEMP_2D'].materials['CONCRETE'].Density(table=((2400.0, ), ))
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE ABSOLUTE ZERO TEMPERATURE HAS NOT BEEN SPECIFIED FOR COMPUTING INTERNAL THERMAL ENERGY USING THE ABSOLUTE ZERO PARAMETER ON THE *PHYSICAL CONSTANTS OPTION. A DEFAULT VALUE OF 0.0000 WILL BE ASSUMED.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\abaqus_results\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 8808, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 7.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 7736.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 7.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Wed Jan  8 12:57:53 2020', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, continueJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 12424, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 29.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 7736.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 22.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.0, 'attempts': 1, 
    'timeIncrement': 3.0, 'increment': 1, 'stepTime': 3.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Wed Jan  8 12:58:16 2020', 
    'jobName': 'Job-1'})
mdb.models['ROOM_TEMP_2D'].PeriodicAmplitude(a_0=0.0, data=((1.0, 0.0), ), 
    frequency=1.0, name='Amp-1', start=0.0, timeSpan=STEP)
mdb.models['ROOM_TEMP_2D'].loads['Load-1'].setValues(amplitude='Amp-1')
mdb.models['ROOM_TEMP_2D'].steps['THERMAL'].setValues(initialInc=10.0, maxInc=
    10.0, minInc=0.0001, timePeriod=10.0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE ABSOLUTE ZERO TEMPERATURE HAS NOT BEEN SPECIFIED FOR COMPUTING INTERNAL THERMAL ENERGY USING THE ABSOLUTE ZERO PARAMETER ON THE *PHYSICAL CONSTANTS OPTION. A DEFAULT VALUE OF 0.0000 WILL BE ASSUMED.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\abaqus_results\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 3960, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 29.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 7736.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 22.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 10.0, 'attempts': 1, 
    'timeIncrement': 10.0, 'increment': 1, 'stepTime': 10.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Wed Jan  8 12:59:42 2020', 
    'jobName': 'Job-1'})
mdb.models['ROOM_TEMP_2D'].parts['WALLS'].deleteMesh()
mdb.models['ROOM_TEMP_2D'].parts['WALLS'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.0)
mdb.models['ROOM_TEMP_2D'].parts['WALLS'].generateMesh()
mdb.models['ROOM_TEMP_2D'].rootAssembly.regenerate()
mdb.models['ROOM_TEMP_2D'].steps['THERMAL'].setValues(maxNumInc=1000)
mdb.models['ROOM_TEMP_2D'].steps['THERMAL'].setValues(amplitude=RAMP, 
    matrixSolver=ITERATIVE, matrixStorage=SYMMETRIC, response=STEADY_STATE)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE ABSOLUTE ZERO TEMPERATURE HAS NOT BEEN SPECIFIED FOR COMPUTING INTERNAL THERMAL ENERGY USING THE ABSOLUTE ZERO PARAMETER ON THE *PHYSICAL CONSTANTS OPTION. A DEFAULT VALUE OF 0.0000 WILL BE ASSUMED.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'ITERATIVE SOLVER CAN ONLY BE USED FOR MODELS WITH 3D ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.models['ROOM_TEMP_2D'].steps['THERMAL'].setValues(matrixSolver=DIRECT, 
    matrixStorage=SOLVER_DEFAULT)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE ABSOLUTE ZERO TEMPERATURE HAS NOT BEEN SPECIFIED FOR COMPUTING INTERNAL THERMAL ENERGY USING THE ABSOLUTE ZERO PARAMETER ON THE *PHYSICAL CONSTANTS OPTION. A DEFAULT VALUE OF 0.0000 WILL BE ASSUMED.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\abaqus_results\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 8332, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 30.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 7736.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 22.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 1U', 
    'timeIncrement': 10.0, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 2U', 
    'timeIncrement': 2.5, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 5})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 3U', 
    'timeIncrement': 0.625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 4U', 
    'timeIncrement': 0.15625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 5})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node WALLS-1.296 D.O.F. 11 ratio = 139.771E+12  .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 5U', 
    'timeIncrement': 0.0390625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 5})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Too many attempts made for this increment', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['ROOM_TEMP_2D'].steps['THERMAL'].setValues(amplitude=STEP, response=
    TRANSIENT)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE ABSOLUTE ZERO TEMPERATURE HAS NOT BEEN SPECIFIED FOR COMPUTING INTERNAL THERMAL ENERGY USING THE ABSOLUTE ZERO PARAMETER ON THE *PHYSICAL CONSTANTS OPTION. A DEFAULT VALUE OF 0.0000 WILL BE ASSUMED.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\abaqus_results\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 13124, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 30.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 7736.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 22.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 10.0, 'attempts': 1, 
    'timeIncrement': 10.0, 'increment': 1, 'stepTime': 10.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['ROOM_TEMP_2D'].materials['CONCRETE'].conductivity.setValues(table=(
    (2000000.0, ), ))
mdb.models['ROOM_TEMP_2D'].materials['CONCRETE'].specificHeat.setValues(table=(
    (1300000.0, ), ))
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE ABSOLUTE ZERO TEMPERATURE HAS NOT BEEN SPECIFIED FOR COMPUTING INTERNAL THERMAL ENERGY USING THE ABSOLUTE ZERO PARAMETER ON THE *PHYSICAL CONSTANTS OPTION. A DEFAULT VALUE OF 0.0000 WILL BE ASSUMED.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\abaqus_results\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 6776, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 30.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 7736.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 22.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 10.0, 'attempts': 1, 
    'timeIncrement': 10.0, 'increment': 1, 'stepTime': 10.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Wed Jan  8 13:04:13 2020', 
    'jobName': 'Job-1'})
mdb.models['ROOM_TEMP_2D'].materials['CONCRETE'].conductivity.setValues(table=(
    (9000000000.0, ), ))
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE ABSOLUTE ZERO TEMPERATURE HAS NOT BEEN SPECIFIED FOR COMPUTING INTERNAL THERMAL ENERGY USING THE ABSOLUTE ZERO PARAMETER ON THE *PHYSICAL CONSTANTS OPTION. A DEFAULT VALUE OF 0.0000 WILL BE ASSUMED.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\abaqus_results\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 2352, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 30.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 7736.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 22.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 10.0, 'attempts': 1, 
    'timeIncrement': 10.0, 'increment': 1, 'stepTime': 10.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
del mdb.models['ROOM_TEMP_2D'].materials['CONCRETE'].specificHeat
mdb.models['ROOM_TEMP_2D'].materials['CONCRETE'].conductivity.setValues(table=(
    (370.0, ), ))
mdb.models['ROOM_TEMP_2D'].rootAssembly.Set(edges=
    mdb.models['ROOM_TEMP_2D'].rootAssembly.instances['WALLS-1'].edges.getSequenceFromMask(
    ('[#10 ]', ), ), name='Set-2')
mdb.models['ROOM_TEMP_2D'].TemperatureBC(amplitude=UNSET, createStepName=
    'THERMAL', distributionType=UNIFORM, fieldName='', fixed=OFF, magnitude=
    10.0, name='BC-2', region=
    mdb.models['ROOM_TEMP_2D'].rootAssembly.sets['Set-2'])
mdb.models['ROOM_TEMP_2D'].rootAssembly.Set(name='Set-3', vertices=
    mdb.models['ROOM_TEMP_2D'].rootAssembly.instances['WALLS-1'].vertices.getSequenceFromMask(
    ('[#8 ]', ), ))
mdb.models['ROOM_TEMP_2D'].ConcentratedHeatFlux(createStepName='THERMAL', 
    magnitude=11.0, name='Load-2', region=
    mdb.models['ROOM_TEMP_2D'].rootAssembly.sets['Set-3'])
mdb.models['ROOM_TEMP_2D'].rootAssembly.Set(edges=
    mdb.models['ROOM_TEMP_2D'].rootAssembly.instances['WALLS-1'].edges.getSequenceFromMask(
    ('[#100 ]', ), ), name='Set-4')
mdb.models['ROOM_TEMP_2D'].TemperatureBC(amplitude=UNSET, createStepName=
    'THERMAL', distributionType=UNIFORM, fieldName='', fixed=OFF, magnitude=
    50.0, name='BC-3', region=
    mdb.models['ROOM_TEMP_2D'].rootAssembly.sets['Set-4'])
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'SPECIFIC HEAT MUST BE DEFINED IN A TRANSIENT HEAT TRANSFER ANALYSIS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'SPECIFIC HEAT HAS NOT BEEN DEFINED FOR MATERIAL CONCRETE DURING A TRANSIENT HEAT TRANSFER ANALYSIS; PLEASE CHECK MATERIAL DATA', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\abaqus_results\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.models['ROOM_TEMP_2D'].steps['THERMAL'].setValues(amplitude=RAMP, response=
    STEADY_STATE)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\abaqus_results\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 13272, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 30.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 7736.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 22.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 10.0, 'attempts': 1, 
    'timeIncrement': 10.0, 'increment': 1, 'stepTime': 10.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Wed Jan  8 13:45:30 2020', 
    'jobName': 'Job-1'})
mdb.models['ROOM_TEMP_2D'].steps['THERMAL'].setValues(amplitude=STEP, response=
    TRANSIENT)
mdb.models['ROOM_TEMP_2D'].materials['CONCRETE'].SpecificHeat(table=((5000.0, 
    ), ))
mdb.models['ROOM_TEMP_2D'].boundaryConditions['BC-2'].setValues(amplitude=
    'Amp-1')
mdb.models['ROOM_TEMP_2D'].boundaryConditions['BC-3'].setValues(amplitude=
    'Amp-1')
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE ABSOLUTE ZERO TEMPERATURE HAS NOT BEEN SPECIFIED FOR COMPUTING INTERNAL THERMAL ENERGY USING THE ABSOLUTE ZERO PARAMETER ON THE *PHYSICAL CONSTANTS OPTION. A DEFAULT VALUE OF 0.0000 WILL BE ASSUMED.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\abaqus_results\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 11396, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 30.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 7736.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 22.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 10.0, 'attempts': 1, 
    'timeIncrement': 10.0, 'increment': 1, 'stepTime': 10.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
del mdb.models['ROOM_TEMP_2D'].materials['CONCRETE'].elastic
mdb.models['ROOM_TEMP_2D'].materials['CONCRETE'].conductivity.setValues(table=(
    (54.0, ), ))
mdb.models['ROOM_TEMP_2D'].materials['CONCRETE'].specificHeat.setValues(table=(
    (490.0, ), ))
mdb.models['ROOM_TEMP_2D'].loads['Load-1'].setValues(magnitude=75000.0)
mdb.models['ROOM_TEMP_2D'].rootAssembly.Set(edges=
    mdb.models['ROOM_TEMP_2D'].rootAssembly.instances['WALLS-1'].edges.getSequenceFromMask(
    ('[#80 ]', ), ), name='Set-5')
mdb.models['ROOM_TEMP_2D'].TemperatureBC(amplitude=UNSET, createStepName=
    'THERMAL', distributionType=UNIFORM, fieldName='', fixed=OFF, magnitude=
    100.0, name='BC-4', region=
    mdb.models['ROOM_TEMP_2D'].rootAssembly.sets['Set-5'])
mdb.models['ROOM_TEMP_2D'].rootAssembly.Set(faces=
    mdb.models['ROOM_TEMP_2D'].rootAssembly.instances['WALLS-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-6')
mdb.models['ROOM_TEMP_2D'].Field(createStepName='THERMAL', 
    crossSectionDistribution=CONSTANT_THROUGH_THICKNESS, distributionType=
    UNIFORM, fieldVariableNum=1, magnitudes=(0.0, ), name='Predefined Field-1', 
    region=mdb.models['ROOM_TEMP_2D'].rootAssembly.sets['Set-6'])
mdb.models['ROOM_TEMP_2D'].predefinedFields['Predefined Field-1'].move(
    'THERMAL', 'Initial')
mdb.models['ROOM_TEMP_2D'].predefinedFields['Predefined Field-1'].setValues(
    magnitudes=(23.0, ))
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 0, 'jobName': 'Job-1'})
# Save by Rodrigo on 2020_01_08-15.45.41; build 2020 2019_09_13-13.49.31 163176
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE ABSOLUTE ZERO TEMPERATURE HAS NOT BEEN SPECIFIED FOR COMPUTING INTERNAL THERMAL ENERGY USING THE ABSOLUTE ZERO PARAMETER ON THE *PHYSICAL CONSTANTS OPTION. A DEFAULT VALUE OF 0.0000 WILL BE ASSUMED.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\abaqus_results\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 7464, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 30.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 7736.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 22.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 10.0, 'attempts': 1, 
    'timeIncrement': 10.0, 'increment': 1, 'stepTime': 10.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Wed Jan  8 15:45:53 2020', 
    'jobName': 'Job-1'})
mdb.models['ROOM_TEMP_2D'].steps['THERMAL'].setValues(initialInc=1.0, maxInc=
    10.0, minInc=0.018, timePeriod=1800.0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE ABSOLUTE ZERO TEMPERATURE HAS NOT BEEN SPECIFIED FOR COMPUTING INTERNAL THERMAL ENERGY USING THE ABSOLUTE ZERO PARAMETER ON THE *PHYSICAL CONSTANTS OPTION. A DEFAULT VALUE OF 0.0000 WILL BE ASSUMED.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\abaqus_results\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-29GEED6', 'handle': 6764, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
# Save by Rodrigo on 2020_01_08-15.50.42; build 2020 2019_09_13-13.49.31 163176
